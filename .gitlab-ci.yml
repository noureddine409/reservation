# Define the global images used for all jobs
image: node:18  # Use a Docker image with Node.js pre-installed

# Define the PostgreSQL service
services:
  - name: postgres:latest
    alias: postgresql

variables:
  POSTGRES_DB: reservation
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: maroc123
  POSTGRES_HOST_AUTH_METHOD: trust
  DATABASE_HOST: postgresql  # PostgreSQL service alias
  DATABASE_PORT: 5432

stages:
  - build
  - test

cache:
  paths:
    - reservation-api/.m2/repository  # Cache Maven dependencies
    - reservation-front/node_modules  # Cache npm dependencies

maven_build:
  image: maven:3.8.6-openjdk-18  # Specify the Maven Docker image with JDK 17
  stage: build
  script:
    - cd reservation-api  # Change directory to the root of your Maven project
    - mkdir -p $CI_PROJECT_DIR/.m2  # Create a .m2 directory in the project root
    - mv ~/.m2/repository $CI_PROJECT_DIR/.m2/repository  # Move Maven's local repository to the project's .m2 directory
    - mvn clean package

react_build:
  stage: build
  script:
    - cd reservation-front  # Change directory to the root of your React project
    - npm install

test:
  stage: test
  script:
    - cd reservation-front  # Run frontend tests
    - npm test
    - cd ../reservation-api  # Run backend tests (if you have any)
    - mvn test
